{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSlice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260016000806101000a81548160ff0219169083151502179055506001600460006101000a81548160ff02191690831515021790555034801561004557600080fd5b506117e2806100556000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063916a17c611610071578063916a17c614610144578063b5508aa914610162578063ba414fa614610180578063e20c9f711461019e578063e27c5b17146101bc578063fa7626d4146101c6576100a9565b80631ed7831c146100ae5780633e5e3c23146100cc5780633f7286f4146100ea57806366d9a9a01461010857806385226c8114610126575b600080fd5b6100b66101e4565b6040516100c39190610f49565b60405180910390f35b6100d4610272565b6040516100e19190610f49565b60405180910390f35b6100f2610300565b6040516100ff9190610f49565b60405180910390f35b61011061038e565b60405161011d9190611154565b60405180910390f35b61012e6104dd565b60405161013b91906112c8565b60405180910390f35b61014c6105b6565b6040516101599190611154565b60405180910390f35b61016a610705565b60405161017791906112c8565b60405180910390f35b6101886107de565b6040516101959190611305565b60405180910390f35b6101a661097b565b6040516101b39190610f49565b60405180910390f35b6101c4610a09565b005b6101ce610ab6565b6040516101db9190611305565b60405180910390f35b6060600d80548060200260200160405190810160405280929190818152602001828054801561026857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161021e575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102f657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102ac575b5050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561038457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161033a575b5050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104d457838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156104bc57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104695790505b505050505081525050815260200190600101906103b2565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156105ad5783829060005260206000200180546105209061134f565b80601f016020809104026020016040519081016040528092919081815260200182805461054c9061134f565b80156105995780601f1061056e57610100808354040283529160200191610599565b820191906000526020600020905b81548152906001019060200180831161057c57829003601f168201915b505050505081526020019060010190610501565b50505050905090565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106fc57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156106e457602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106915790505b505050505081525050815260200190600101906105da565b50505050905090565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156107d55783829060005260206000200180546107489061134f565b80601f01602080910402602001604051908101604052809291908181526020018280546107749061134f565b80156107c15780601f10610796576101008083540402835291602001916107c1565b820191906000526020600020905b8154815290600101906020018083116107a457829003601f168201915b505050505081526020019060010190610729565b50505050905090565b60008060019054906101000a900460ff161561080b57600060019054906101000a900460ff169050610978565b6000610815610ac7565b156109735760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c73ffffffffffffffffffffffffffffffffffffffff167f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc47f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c7f6661696c656400000000000000000000000000000000000000000000000000006040516020016108d99291906113a8565b6040516020818303038152906040526040516020016108f9929190611439565b6040516020818303038152906040526040516109159190611461565b6000604051808303816000865af19150503d8060008114610952576040519150601f19603f3d011682016040523d82523d6000602084013e610957565b606091505b509150508080602001905181019061096f91906114a9565b9150505b809150505b90565b6060600c8054806020026020016040519081016040528092919081815260200182805480156109ff57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109b5575b5050505050905090565b60006040518060400160405280600b81526020017f68656c6c6f20776f726c6400000000000000000000000000000000000000000081525090506000610a528260006005610af0565b9050610a5d81610bde565b610ab2604051602001610a6f9061152d565b6040516020818303038152906040528051906020012082604051602001610a969190611573565b6040516020818303038152906040528051906020012014610c77565b5050565b60008054906101000a900460ff1681565b60008060009050737109709ecfa91a80626ff3989d68f67f5b1dd12d3b90506000811191505090565b6060600084905060008367ffffffffffffffff811115610b1357610b1261158a565b5b6040519080825280601f01601f191660200182016040528015610b455781602001600182028036833780820191505090505b50905060005b84811015610bd157828682610b6091906115f2565b81518110610b7157610b70611626565b5b602001015160f81c60f81b828281518110610b8f57610b8e611626565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610bc990611655565b915050610b4b565b5080925050509392505050565b610c7481604051602401610bf291906116e7565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cbd565b50565b80610cba577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610ca990611755565b60405180910390a1610cb9610ce6565b5b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b610cee610ac7565b15610e3c5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c73ffffffffffffffffffffffffffffffffffffffff167f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc47f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c7f6661696c65640000000000000000000000000000000000000000000000000000600160001b604051602001610db893929190611775565b604051602081830303815290604052604051602001610dd8929190611439565b604051602081830303815290604052604051610df49190611461565b6000604051808303816000865af19150503d8060008114610e31576040519150601f19603f3d011682016040523d82523d6000602084013e610e36565b606091505b50509050505b6001600060016101000a81548160ff021916908315150217905550565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eb082610e85565b9050919050565b610ec081610ea5565b82525050565b6000610ed28383610eb7565b60208301905092915050565b6000602082019050919050565b6000610ef682610e59565b610f008185610e64565b9350610f0b83610e75565b8060005b83811015610f3c578151610f238882610ec6565b9750610f2e83610ede565b925050600181019050610f0f565b5085935050505092915050565b60006020820190508181036000830152610f638184610eeb565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610ff881610fc3565b82525050565b600061100a8383610fef565b60208301905092915050565b6000602082019050919050565b600061102e82610f97565b6110388185610fa2565b935061104383610fb3565b8060005b8381101561107457815161105b8882610ffe565b975061106683611016565b925050600181019050611047565b5085935050505092915050565b60006040830160008301516110996000860182610eb7565b50602083015184820360208601526110b18282611023565b9150508091505092915050565b60006110ca8383611081565b905092915050565b6000602082019050919050565b60006110ea82610f6b565b6110f48185610f76565b93508360208202850161110685610f87565b8060005b85811015611142578484038952815161112385826110be565b945061112e836110d2565b925060208a0199505060018101905061110a565b50829750879550505050505092915050565b6000602082019050818103600083015261116e81846110df565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111dc5780820151818401526020810190506111c1565b60008484015250505050565b6000601f19601f8301169050919050565b6000611204826111a2565b61120e81856111ad565b935061121e8185602086016111be565b611227816111e8565b840191505092915050565b600061123e83836111f9565b905092915050565b6000602082019050919050565b600061125e82611176565b6112688185611181565b93508360208202850161127a85611192565b8060005b858110156112b657848403895281516112978582611232565b94506112a283611246565b925060208a0199505060018101905061127e565b50829750879550505050505092915050565b600060208201905081810360008301526112e28184611253565b905092915050565b60008115159050919050565b6112ff816112ea565b82525050565b600060208201905061131a60008301846112f6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061136757607f821691505b60208210810361137a57611379611320565b5b50919050565b61138981610ea5565b82525050565b6000819050919050565b6113a28161138f565b82525050565b60006040820190506113bd6000830185611380565b6113ca6020830184611399565b9392505050565b6000819050919050565b6113ec6113e782610fc3565b6113d1565b82525050565b600081519050919050565b600081905092915050565b6000611413826113f2565b61141d81856113fd565b935061142d8185602086016111be565b80840191505092915050565b600061144582856113db565b6004820191506114558284611408565b91508190509392505050565b600061146d8284611408565b915081905092915050565b600080fd5b611486816112ea565b811461149157600080fd5b50565b6000815190506114a38161147d565b92915050565b6000602082840312156114bf576114be611478565b5b60006114cd84828501611494565b91505092915050565b600081905092915050565b7f68656c6c6f000000000000000000000000000000000000000000000000000000600082015250565b60006115176005836114d6565b9150611522826114e1565b600582019050919050565b60006115388261150a565b9150819050919050565b600061154d826111a2565b61155781856114d6565b93506115678185602086016111be565b80840191505092915050565b600061157f8284611542565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115fd826115b9565b9150611608836115b9565b92508282019050808211156116205761161f6115c3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611660826115b9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611692576116916115c3565b5b600182019050919050565b600082825260208201905092915050565b60006116b9826111a2565b6116c3818561169d565b93506116d38185602086016111be565b6116dc816111e8565b840191505092915050565b6000602082019050818103600083015261170181846116ae565b905092915050565b7f4572726f723a20417373657274696f6e204661696c6564000000000000000000600082015250565b600061173f60178361169d565b915061174a82611709565b602082019050919050565b6000602082019050818103600083015261176e81611732565b9050919050565b600060608201905061178a6000830186611380565b6117976020830185611399565b6117a46040830184611399565b94935050505056fea2646970667358221220cf899f836cb65678534c4c13bb1817da24e2a94bed8ccbe47dcfea2425578e2064736f6c63430008150033",
    "sourceMap": "141:356:37:-:0;;;1594:4:0;1572:26;;;;;;;;;;;;;;;;;;;;3328:4:4;3288:44;;;;;;;;;;;;;;;;;;;;141:356:37;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063916a17c611610071578063916a17c614610144578063b5508aa914610162578063ba414fa614610180578063e20c9f711461019e578063e27c5b17146101bc578063fa7626d4146101c6576100a9565b80631ed7831c146100ae5780633e5e3c23146100cc5780633f7286f4146100ea57806366d9a9a01461010857806385226c8114610126575b600080fd5b6100b66101e4565b6040516100c39190610f49565b60405180910390f35b6100d4610272565b6040516100e19190610f49565b60405180910390f35b6100f2610300565b6040516100ff9190610f49565b60405180910390f35b61011061038e565b60405161011d9190611154565b60405180910390f35b61012e6104dd565b60405161013b91906112c8565b60405180910390f35b61014c6105b6565b6040516101599190611154565b60405180910390f35b61016a610705565b60405161017791906112c8565b60405180910390f35b6101886107de565b6040516101959190611305565b60405180910390f35b6101a661097b565b6040516101b39190610f49565b60405180910390f35b6101c4610a09565b005b6101ce610ab6565b6040516101db9190611305565b60405180910390f35b6060600d80548060200260200160405190810160405280929190818152602001828054801561026857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161021e575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102f657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102ac575b5050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561038457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161033a575b5050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104d457838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156104bc57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104695790505b505050505081525050815260200190600101906103b2565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156105ad5783829060005260206000200180546105209061134f565b80601f016020809104026020016040519081016040528092919081815260200182805461054c9061134f565b80156105995780601f1061056e57610100808354040283529160200191610599565b820191906000526020600020905b81548152906001019060200180831161057c57829003601f168201915b505050505081526020019060010190610501565b50505050905090565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106fc57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156106e457602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106915790505b505050505081525050815260200190600101906105da565b50505050905090565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156107d55783829060005260206000200180546107489061134f565b80601f01602080910402602001604051908101604052809291908181526020018280546107749061134f565b80156107c15780601f10610796576101008083540402835291602001916107c1565b820191906000526020600020905b8154815290600101906020018083116107a457829003601f168201915b505050505081526020019060010190610729565b50505050905090565b60008060019054906101000a900460ff161561080b57600060019054906101000a900460ff169050610978565b6000610815610ac7565b156109735760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c73ffffffffffffffffffffffffffffffffffffffff167f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc47f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c7f6661696c656400000000000000000000000000000000000000000000000000006040516020016108d99291906113a8565b6040516020818303038152906040526040516020016108f9929190611439565b6040516020818303038152906040526040516109159190611461565b6000604051808303816000865af19150503d8060008114610952576040519150601f19603f3d011682016040523d82523d6000602084013e610957565b606091505b509150508080602001905181019061096f91906114a9565b9150505b809150505b90565b6060600c8054806020026020016040519081016040528092919081815260200182805480156109ff57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109b5575b5050505050905090565b60006040518060400160405280600b81526020017f68656c6c6f20776f726c6400000000000000000000000000000000000000000081525090506000610a528260006005610af0565b9050610a5d81610bde565b610ab2604051602001610a6f9061152d565b6040516020818303038152906040528051906020012082604051602001610a969190611573565b6040516020818303038152906040528051906020012014610c77565b5050565b60008054906101000a900460ff1681565b60008060009050737109709ecfa91a80626ff3989d68f67f5b1dd12d3b90506000811191505090565b6060600084905060008367ffffffffffffffff811115610b1357610b1261158a565b5b6040519080825280601f01601f191660200182016040528015610b455781602001600182028036833780820191505090505b50905060005b84811015610bd157828682610b6091906115f2565b81518110610b7157610b70611626565b5b602001015160f81c60f81b828281518110610b8f57610b8e611626565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610bc990611655565b915050610b4b565b5080925050509392505050565b610c7481604051602401610bf291906116e7565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cbd565b50565b80610cba577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610ca990611755565b60405180910390a1610cb9610ce6565b5b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b610cee610ac7565b15610e3c5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c73ffffffffffffffffffffffffffffffffffffffff167f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc47f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c7f6661696c65640000000000000000000000000000000000000000000000000000600160001b604051602001610db893929190611775565b604051602081830303815290604052604051602001610dd8929190611439565b604051602081830303815290604052604051610df49190611461565b6000604051808303816000865af19150503d8060008114610e31576040519150601f19603f3d011682016040523d82523d6000602084013e610e36565b606091505b50509050505b6001600060016101000a81548160ff021916908315150217905550565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eb082610e85565b9050919050565b610ec081610ea5565b82525050565b6000610ed28383610eb7565b60208301905092915050565b6000602082019050919050565b6000610ef682610e59565b610f008185610e64565b9350610f0b83610e75565b8060005b83811015610f3c578151610f238882610ec6565b9750610f2e83610ede565b925050600181019050610f0f565b5085935050505092915050565b60006020820190508181036000830152610f638184610eeb565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610ff881610fc3565b82525050565b600061100a8383610fef565b60208301905092915050565b6000602082019050919050565b600061102e82610f97565b6110388185610fa2565b935061104383610fb3565b8060005b8381101561107457815161105b8882610ffe565b975061106683611016565b925050600181019050611047565b5085935050505092915050565b60006040830160008301516110996000860182610eb7565b50602083015184820360208601526110b18282611023565b9150508091505092915050565b60006110ca8383611081565b905092915050565b6000602082019050919050565b60006110ea82610f6b565b6110f48185610f76565b93508360208202850161110685610f87565b8060005b85811015611142578484038952815161112385826110be565b945061112e836110d2565b925060208a0199505060018101905061110a565b50829750879550505050505092915050565b6000602082019050818103600083015261116e81846110df565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111dc5780820151818401526020810190506111c1565b60008484015250505050565b6000601f19601f8301169050919050565b6000611204826111a2565b61120e81856111ad565b935061121e8185602086016111be565b611227816111e8565b840191505092915050565b600061123e83836111f9565b905092915050565b6000602082019050919050565b600061125e82611176565b6112688185611181565b93508360208202850161127a85611192565b8060005b858110156112b657848403895281516112978582611232565b94506112a283611246565b925060208a0199505060018101905061127e565b50829750879550505050505092915050565b600060208201905081810360008301526112e28184611253565b905092915050565b60008115159050919050565b6112ff816112ea565b82525050565b600060208201905061131a60008301846112f6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061136757607f821691505b60208210810361137a57611379611320565b5b50919050565b61138981610ea5565b82525050565b6000819050919050565b6113a28161138f565b82525050565b60006040820190506113bd6000830185611380565b6113ca6020830184611399565b9392505050565b6000819050919050565b6113ec6113e782610fc3565b6113d1565b82525050565b600081519050919050565b600081905092915050565b6000611413826113f2565b61141d81856113fd565b935061142d8185602086016111be565b80840191505092915050565b600061144582856113db565b6004820191506114558284611408565b91508190509392505050565b600061146d8284611408565b915081905092915050565b600080fd5b611486816112ea565b811461149157600080fd5b50565b6000815190506114a38161147d565b92915050565b6000602082840312156114bf576114be611478565b5b60006114cd84828501611494565b91505092915050565b600081905092915050565b7f68656c6c6f000000000000000000000000000000000000000000000000000000600082015250565b60006115176005836114d6565b9150611522826114e1565b600582019050919050565b60006115388261150a565b9150819050919050565b600061154d826111a2565b61155781856114d6565b93506115678185602086016111be565b80840191505092915050565b600061157f8284611542565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115fd826115b9565b9150611608836115b9565b92508282019050808211156116205761161f6115c3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611660826115b9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611692576116916115c3565b5b600182019050919050565b600082825260208201905092915050565b60006116b9826111a2565b6116c3818561169d565b93506116d38185602086016111be565b6116dc816111e8565b840191505092915050565b6000602082019050818103600083015261170181846116ae565b905092915050565b7f4572726f723a20417373657274696f6e204661696c6564000000000000000000600082015250565b600061173f60178361169d565b915061174a82611709565b602082019050919050565b6000602082019050818103600083015261176e81611732565b9050919050565b600060608201905061178a6000830186611380565b6117976020830185611399565b6117a46040830184611399565b94935050505056fea2646970667358221220cf899f836cb65678534c4c13bb1817da24e2a94bed8ccbe47dcfea2425578e2064736f6c63430008150033",
    "sourceMap": "141:356:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2631:141;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2447:178;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2301:140;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2778:146;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1866:141;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:584:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2013:142:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;186:309:37;;;:::i;:::-;;1572:26:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2161:134:7;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:140;:::o;2778:146::-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;:::o;1866:141::-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;:::o;1819:584:0:-;1853:4;1873:7;;;;;;;;;;;1869:528;;;1903:7;;;;;;;;;;;1896:14;;;;1869:528;1941:17;1984:16;:14;:16::i;:::-;1980:374;;;2023:20;1703:28;1695:37;;1679:55;;1671:64;;2047:17;;2135:34;1703:28;1695:37;;1679:55;;1671:64;;2221:17;2196:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2086:175;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2047:232;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;2367:19;;;1819:584;;:::o;2013:142:7:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;186:309:37:-;224:17;:33;;;;;;;;;;;;;;;;;;;267:19;289:30;309:3;314:1;317;289:19;:30::i;:::-;267:52;;329:25;348:5;329:18;:25::i;:::-;364:124;452:25;;;;;;;:::i;:::-;;;;;;;;;;;;;442:36;;;;;;415:5;398:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;388:34;;;;;;:90;364:10;:124::i;:::-;214:281;;186:309::o;1572:26:0:-;;;;;;;;;;;;:::o;2847:242::-;2896:4;2912:20;2935:1;2912:24;;2997:42;2985:55;2969:71;;3081:1;3066:12;:16;3059:23;;;2847:242;:::o;105:348:24:-;214:13;239:21;269:3;239:34;;283:19;315:3;305:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:36;;334:6;329:87;350:3;346:1;:7;329:87;;;386:8;399:5;395:1;:9;;;;:::i;:::-;386:19;;;;;;;;:::i;:::-;;;;;;;;;;374:6;381:1;374:9;;;;;;;;:::i;:::-;;;;;:31;;;;;;;;;;;355:3;;;;;:::i;:::-;;;;329:87;;;;439:6;425:21;;;;105:348;;;;;:::o;1373:127:16:-;1434:59;1489:2;1450:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:15;:59::i;:::-;1373:127;:::o;3262:157:0:-;3322:9;3317:96;;3352:30;;;;;;:::i;:::-;;;;;;;;3396:6;:4;:6::i;:::-;3317:96;3262:157;:::o;641:376:16:-;711:21;735:7;:14;711:38;;759:22;591:42;759:40;;908:2;899:7;895:16;999:1;996;981:13;967:12;951:14;944:5;933:68;861:150;;;;641:376;:::o;2409:432:0:-;2456:16;:14;:16::i;:::-;2452:359;;;2489:11;1703:28;1695:37;;1679:55;;1671:64;;2506:17;;2586:43;1703:28;1695:37;;1679:55;;1671:64;;2677:17;2712:4;2696:22;;2652:67;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2541:196;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2506:245;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:263;;;2474:337;2452:359;2830:4;2820:7;;:14;;;;;;;;;;;;;;;;;;2409:432::o;7:114:46:-;74:6;108:5;102:12;92:22;;7:114;;;:::o;127:184::-;226:11;260:6;255:3;248:19;300:4;295:3;291:14;276:29;;127:184;;;;:::o;317:132::-;384:4;407:3;399:11;;437:4;432:3;428:14;420:22;;317:132;;;:::o;455:126::-;492:7;532:42;525:5;521:54;510:65;;455:126;;;:::o;587:96::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;587:96;;;:::o;689:108::-;766:24;784:5;766:24;:::i;:::-;761:3;754:37;689:108;;:::o;803:179::-;872:10;893:46;935:3;927:6;893:46;:::i;:::-;971:4;966:3;962:14;948:28;;803:179;;;;:::o;988:113::-;1058:4;1090;1085:3;1081:14;1073:22;;988:113;;;:::o;1137:732::-;1256:3;1285:54;1333:5;1285:54;:::i;:::-;1355:86;1434:6;1429:3;1355:86;:::i;:::-;1348:93;;1465:56;1515:5;1465:56;:::i;:::-;1544:7;1575:1;1560:284;1585:6;1582:1;1579:13;1560:284;;;1661:6;1655:13;1688:63;1747:3;1732:13;1688:63;:::i;:::-;1681:70;;1774:60;1827:6;1774:60;:::i;:::-;1764:70;;1620:224;1607:1;1604;1600:9;1595:14;;1560:284;;;1564:14;1860:3;1853:10;;1261:608;;;1137:732;;;;:::o;1875:373::-;2018:4;2056:2;2045:9;2041:18;2033:26;;2105:9;2099:4;2095:20;2091:1;2080:9;2076:17;2069:47;2133:108;2236:4;2227:6;2133:108;:::i;:::-;2125:116;;1875:373;;;;:::o;2254:144::-;2351:6;2385:5;2379:12;2369:22;;2254:144;;;:::o;2404:214::-;2533:11;2567:6;2562:3;2555:19;2607:4;2602:3;2598:14;2583:29;;2404:214;;;;:::o;2624:162::-;2721:4;2744:3;2736:11;;2774:4;2769:3;2765:14;2757:22;;2624:162;;;:::o;2792:113::-;2858:6;2892:5;2886:12;2876:22;;2792:113;;;:::o;2911:173::-;2999:11;3033:6;3028:3;3021:19;3073:4;3068:3;3064:14;3049:29;;2911:173;;;;:::o;3090:131::-;3156:4;3179:3;3171:11;;3209:4;3204:3;3200:14;3192:22;;3090:131;;;:::o;3227:149::-;3263:7;3303:66;3296:5;3292:78;3281:89;;3227:149;;;:::o;3382:105::-;3457:23;3474:5;3457:23;:::i;:::-;3452:3;3445:36;3382:105;;:::o;3493:175::-;3560:10;3581:44;3621:3;3613:6;3581:44;:::i;:::-;3657:4;3652:3;3648:14;3634:28;;3493:175;;;;:::o;3674:112::-;3743:4;3775;3770:3;3766:14;3758:22;;3674:112;;;:::o;3820:704::-;3927:3;3956:53;4003:5;3956:53;:::i;:::-;4025:75;4093:6;4088:3;4025:75;:::i;:::-;4018:82;;4124:55;4173:5;4124:55;:::i;:::-;4202:7;4233:1;4218:281;4243:6;4240:1;4237:13;4218:281;;;4319:6;4313:13;4346:61;4403:3;4388:13;4346:61;:::i;:::-;4339:68;;4430:59;4482:6;4430:59;:::i;:::-;4420:69;;4278:221;4265:1;4262;4258:9;4253:14;;4218:281;;;4222:14;4515:3;4508:10;;3932:592;;;3820:704;;;;:::o;4606:639::-;4725:3;4761:4;4756:3;4752:14;4848:4;4841:5;4837:16;4831:23;4867:63;4924:4;4919:3;4915:14;4901:12;4867:63;:::i;:::-;4776:164;5027:4;5020:5;5016:16;5010:23;5080:3;5074:4;5070:14;5063:4;5058:3;5054:14;5047:38;5106:101;5202:4;5188:12;5106:101;:::i;:::-;5098:109;;4950:268;5235:4;5228:11;;4730:515;4606:639;;;;:::o;5251:276::-;5380:10;5415:106;5517:3;5509:6;5415:106;:::i;:::-;5401:120;;5251:276;;;;:::o;5533:143::-;5633:4;5665;5660:3;5656:14;5648:22;;5533:143;;;:::o;5762:1151::-;5941:3;5970:84;6048:5;5970:84;:::i;:::-;6070:116;6179:6;6174:3;6070:116;:::i;:::-;6063:123;;6212:3;6257:4;6249:6;6245:17;6240:3;6236:27;6287:86;6367:5;6287:86;:::i;:::-;6396:7;6427:1;6412:456;6437:6;6434:1;6431:13;6412:456;;;6508:9;6502:4;6498:20;6493:3;6486:33;6559:6;6553:13;6587:124;6706:4;6691:13;6587:124;:::i;:::-;6579:132;;6734:90;6817:6;6734:90;:::i;:::-;6724:100;;6853:4;6848:3;6844:14;6837:21;;6472:396;6459:1;6456;6452:9;6447:14;;6412:456;;;6416:14;6884:4;6877:11;;6904:3;6897:10;;5946:967;;;;;5762:1151;;;;:::o;6919:493::-;7122:4;7160:2;7149:9;7145:18;7137:26;;7209:9;7203:4;7199:20;7195:1;7184:9;7180:17;7173:47;7237:168;7400:4;7391:6;7237:168;:::i;:::-;7229:176;;6919:493;;;;:::o;7418:124::-;7495:6;7529:5;7523:12;7513:22;;7418:124;;;:::o;7548:194::-;7657:11;7691:6;7686:3;7679:19;7731:4;7726:3;7722:14;7707:29;;7548:194;;;;:::o;7748:142::-;7825:4;7848:3;7840:11;;7878:4;7873:3;7869:14;7861:22;;7748:142;;;:::o;7896:99::-;7948:6;7982:5;7976:12;7966:22;;7896:99;;;:::o;8001:159::-;8075:11;8109:6;8104:3;8097:19;8149:4;8144:3;8140:14;8125:29;;8001:159;;;;:::o;8166:246::-;8247:1;8257:113;8271:6;8268:1;8265:13;8257:113;;;8356:1;8351:3;8347:11;8341:18;8337:1;8332:3;8328:11;8321:39;8293:2;8290:1;8286:10;8281:15;;8257:113;;;8404:1;8395:6;8390:3;8386:16;8379:27;8228:184;8166:246;;;:::o;8418:102::-;8459:6;8510:2;8506:7;8501:2;8494:5;8490:14;8486:28;8476:38;;8418:102;;;:::o;8526:357::-;8604:3;8632:39;8665:5;8632:39;:::i;:::-;8687:61;8741:6;8736:3;8687:61;:::i;:::-;8680:68;;8757:65;8815:6;8810:3;8803:4;8796:5;8792:16;8757:65;:::i;:::-;8847:29;8869:6;8847:29;:::i;:::-;8842:3;8838:39;8831:46;;8608:275;8526:357;;;;:::o;8889:196::-;8978:10;9013:66;9075:3;9067:6;9013:66;:::i;:::-;8999:80;;8889:196;;;;:::o;9091:123::-;9171:4;9203;9198:3;9194:14;9186:22;;9091:123;;;:::o;9248:991::-;9387:3;9416:64;9474:5;9416:64;:::i;:::-;9496:96;9585:6;9580:3;9496:96;:::i;:::-;9489:103;;9618:3;9663:4;9655:6;9651:17;9646:3;9642:27;9693:66;9753:5;9693:66;:::i;:::-;9782:7;9813:1;9798:396;9823:6;9820:1;9817:13;9798:396;;;9894:9;9888:4;9884:20;9879:3;9872:33;9945:6;9939:13;9973:84;10052:4;10037:13;9973:84;:::i;:::-;9965:92;;10080:70;10143:6;10080:70;:::i;:::-;10070:80;;10179:4;10174:3;10170:14;10163:21;;9858:336;9845:1;9842;9838:9;9833:14;;9798:396;;;9802:14;10210:4;10203:11;;10230:3;10223:10;;9392:847;;;;;9248:991;;;;:::o;10245:413::-;10408:4;10446:2;10435:9;10431:18;10423:26;;10495:9;10489:4;10485:20;10481:1;10470:9;10466:17;10459:47;10523:128;10646:4;10637:6;10523:128;:::i;:::-;10515:136;;10245:413;;;;:::o;10664:90::-;10698:7;10741:5;10734:13;10727:21;10716:32;;10664:90;;;:::o;10760:109::-;10841:21;10856:5;10841:21;:::i;:::-;10836:3;10829:34;10760:109;;:::o;10875:210::-;10962:4;11000:2;10989:9;10985:18;10977:26;;11013:65;11075:1;11064:9;11060:17;11051:6;11013:65;:::i;:::-;10875:210;;;;:::o;11091:180::-;11139:77;11136:1;11129:88;11236:4;11233:1;11226:15;11260:4;11257:1;11250:15;11277:320;11321:6;11358:1;11352:4;11348:12;11338:22;;11405:1;11399:4;11395:12;11426:18;11416:81;;11482:4;11474:6;11470:17;11460:27;;11416:81;11544:2;11536:6;11533:14;11513:18;11510:38;11507:84;;11563:18;;:::i;:::-;11507:84;11328:269;11277:320;;;:::o;11603:118::-;11690:24;11708:5;11690:24;:::i;:::-;11685:3;11678:37;11603:118;;:::o;11727:77::-;11764:7;11793:5;11782:16;;11727:77;;;:::o;11810:118::-;11897:24;11915:5;11897:24;:::i;:::-;11892:3;11885:37;11810:118;;:::o;11934:332::-;12055:4;12093:2;12082:9;12078:18;12070:26;;12106:71;12174:1;12163:9;12159:17;12150:6;12106:71;:::i;:::-;12187:72;12255:2;12244:9;12240:18;12231:6;12187:72;:::i;:::-;11934:332;;;;;:::o;12272:78::-;12310:7;12339:5;12328:16;;12272:78;;;:::o;12356:153::-;12459:43;12478:23;12495:5;12478:23;:::i;:::-;12459:43;:::i;:::-;12454:3;12447:56;12356:153;;:::o;12515:98::-;12566:6;12600:5;12594:12;12584:22;;12515:98;;;:::o;12619:147::-;12720:11;12757:3;12742:18;;12619:147;;;;:::o;12772:386::-;12876:3;12904:38;12936:5;12904:38;:::i;:::-;12958:88;13039:6;13034:3;12958:88;:::i;:::-;12951:95;;13055:65;13113:6;13108:3;13101:4;13094:5;13090:16;13055:65;:::i;:::-;13145:6;13140:3;13136:16;13129:23;;12880:278;12772:386;;;;:::o;13164:407::-;13320:3;13335:73;13404:3;13395:6;13335:73;:::i;:::-;13433:1;13428:3;13424:11;13417:18;;13452:93;13541:3;13532:6;13452:93;:::i;:::-;13445:100;;13562:3;13555:10;;13164:407;;;;;:::o;13577:271::-;13707:3;13729:93;13818:3;13809:6;13729:93;:::i;:::-;13722:100;;13839:3;13832:10;;13577:271;;;;:::o;13935:117::-;14044:1;14041;14034:12;14181:116;14251:21;14266:5;14251:21;:::i;:::-;14244:5;14241:32;14231:60;;14287:1;14284;14277:12;14231:60;14181:116;:::o;14303:137::-;14357:5;14388:6;14382:13;14373:22;;14404:30;14428:5;14404:30;:::i;:::-;14303:137;;;;:::o;14446:345::-;14513:6;14562:2;14550:9;14541:7;14537:23;14533:32;14530:119;;;14568:79;;:::i;:::-;14530:119;14688:1;14713:61;14766:7;14757:6;14746:9;14742:22;14713:61;:::i;:::-;14703:71;;14659:125;14446:345;;;;:::o;14797:148::-;14899:11;14936:3;14921:18;;14797:148;;;;:::o;14951:155::-;15091:7;15087:1;15079:6;15075:14;15068:31;14951:155;:::o;15112:400::-;15272:3;15293:84;15375:1;15370:3;15293:84;:::i;:::-;15286:91;;15386:93;15475:3;15386:93;:::i;:::-;15504:1;15499:3;15495:11;15488:18;;15112:400;;;:::o;15518:381::-;15703:3;15725:148;15869:3;15725:148;:::i;:::-;15718:155;;15890:3;15883:10;;15518:381;;;:::o;15905:390::-;16011:3;16039:39;16072:5;16039:39;:::i;:::-;16094:89;16176:6;16171:3;16094:89;:::i;:::-;16087:96;;16192:65;16250:6;16245:3;16238:4;16231:5;16227:16;16192:65;:::i;:::-;16282:6;16277:3;16273:16;16266:23;;16015:280;15905:390;;;;:::o;16301:275::-;16433:3;16455:95;16546:3;16537:6;16455:95;:::i;:::-;16448:102;;16567:3;16560:10;;16301:275;;;;:::o;16582:180::-;16630:77;16627:1;16620:88;16727:4;16724:1;16717:15;16751:4;16748:1;16741:15;16768:77;16805:7;16834:5;16823:16;;16768:77;;;:::o;16851:180::-;16899:77;16896:1;16889:88;16996:4;16993:1;16986:15;17020:4;17017:1;17010:15;17037:191;17077:3;17096:20;17114:1;17096:20;:::i;:::-;17091:25;;17130:20;17148:1;17130:20;:::i;:::-;17125:25;;17173:1;17170;17166:9;17159:16;;17194:3;17191:1;17188:10;17185:36;;;17201:18;;:::i;:::-;17185:36;17037:191;;;;:::o;17234:180::-;17282:77;17279:1;17272:88;17379:4;17376:1;17369:15;17403:4;17400:1;17393:15;17420:233;17459:3;17482:24;17500:5;17482:24;:::i;:::-;17473:33;;17528:66;17521:5;17518:77;17515:103;;17598:18;;:::i;:::-;17515:103;17645:1;17638:5;17634:13;17627:20;;17420:233;;;:::o;17659:169::-;17743:11;17777:6;17772:3;17765:19;17817:4;17812:3;17808:14;17793:29;;17659:169;;;;:::o;17834:377::-;17922:3;17950:39;17983:5;17950:39;:::i;:::-;18005:71;18069:6;18064:3;18005:71;:::i;:::-;17998:78;;18085:65;18143:6;18138:3;18131:4;18124:5;18120:16;18085:65;:::i;:::-;18175:29;18197:6;18175:29;:::i;:::-;18170:3;18166:39;18159:46;;17926:285;17834:377;;;;:::o;18217:313::-;18330:4;18368:2;18357:9;18353:18;18345:26;;18417:9;18411:4;18407:20;18403:1;18392:9;18388:17;18381:47;18445:78;18518:4;18509:6;18445:78;:::i;:::-;18437:86;;18217:313;;;;:::o;18536:173::-;18676:25;18672:1;18664:6;18660:14;18653:49;18536:173;:::o;18715:366::-;18857:3;18878:67;18942:2;18937:3;18878:67;:::i;:::-;18871:74;;18954:93;19043:3;18954:93;:::i;:::-;19072:2;19067:3;19063:12;19056:19;;18715:366;;;:::o;19087:419::-;19253:4;19291:2;19280:9;19276:18;19268:26;;19340:9;19334:4;19330:20;19326:1;19315:9;19311:17;19304:47;19368:131;19494:4;19368:131;:::i;:::-;19360:139;;19087:419;;;:::o;19512:442::-;19661:4;19699:2;19688:9;19684:18;19676:26;;19712:71;19780:1;19769:9;19765:17;19756:6;19712:71;:::i;:::-;19793:72;19861:2;19850:9;19846:18;19837:6;19793:72;:::i;:::-;19875;19943:2;19932:9;19928:18;19919:6;19875:72;:::i;:::-;19512:442;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testSlice()": "e27c5b17"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSlice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/librarydemo.t.sol\":\"StringLibraryDemoTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/librarydemo.sol\":{\"keccak256\":\"0x3a0ce23ef967f2fe59a0fd0d4d196598ba578934cd506eb39338185331cbfb55\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://10ddcf7439c8e1edcdff78aa2becf22fc56add5438354aabffa55071bf9034ff\",\"dweb:/ipfs/QmRS6HD1bZakKPNPsj4PwMpks2ctpaqgeWKyYVJhMZDjE1\"]},\"test/librarydemo.t.sol\":{\"keccak256\":\"0xce262ac077a48d7c84d79660df4b6a00261510df76e3394f7089940ecc54b3b8\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://c173a60544f72ba70064197c2eb4882577154d1a76b13a9aee1583f9f1698403\",\"dweb:/ipfs/QmaRrZ9YVJqDinhemUo4u9RPmEv72pSYii1zWhwomNWKDs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSlice"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/librarydemo.t.sol": "StringLibraryDemoTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/librarydemo.sol": {
        "keccak256": "0x3a0ce23ef967f2fe59a0fd0d4d196598ba578934cd506eb39338185331cbfb55",
        "urls": [
          "bzz-raw://10ddcf7439c8e1edcdff78aa2becf22fc56add5438354aabffa55071bf9034ff",
          "dweb:/ipfs/QmRS6HD1bZakKPNPsj4PwMpks2ctpaqgeWKyYVJhMZDjE1"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "test/librarydemo.t.sol": {
        "keccak256": "0xce262ac077a48d7c84d79660df4b6a00261510df76e3394f7089940ecc54b3b8",
        "urls": [
          "bzz-raw://c173a60544f72ba70064197c2eb4882577154d1a76b13a9aee1583f9f1698403",
          "dweb:/ipfs/QmaRrZ9YVJqDinhemUo4u9RPmEv72pSYii1zWhwomNWKDs"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/librarydemo.t.sol",
    "id": 31753,
    "exportedSymbols": {
      "ArrayLibrary": [
        29087
      ],
      "ArrayLibraryDemoTest": [
        31752
      ],
      "DSTest": [
        1786
      ],
      "StdAssertions": [
        3297
      ],
      "StdChains": [
        3991
      ],
      "StdCheats": [
        6242
      ],
      "StdInvariant": [
        6532
      ],
      "StdStorage": [
        7282
      ],
      "StdStyle": [
        9926
      ],
      "StdUtils": [
        10733
      ],
      "StringLibrary": [
        29037
      ],
      "StringLibraryDemoTest": [
        31677
      ],
      "Test": [
        10782
      ],
      "TestBase": [
        1846
      ],
      "Vm": [
        12102
      ],
      "console": [
        20166
      ],
      "console2": [
        28262
      ],
      "stdError": [
        6308
      ],
      "stdJson": [
        7108
      ],
      "stdMath": [
        7250
      ],
      "stdStorage": [
        8715
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:836:37",
    "nodes": [
      {
        "id": 31633,
        "nodeType": "PragmaDirective",
        "src": "51:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 31634,
        "nodeType": "ImportDirective",
        "src": "77:28:37",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31753,
        "sourceUnit": 10783,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31635,
        "nodeType": "ImportDirective",
        "src": "107:32:37",
        "nodes": [],
        "absolutePath": "src/librarydemo.sol",
        "file": "../src/librarydemo.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31753,
        "sourceUnit": 29088,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31677,
        "nodeType": "ContractDefinition",
        "src": "141:356:37",
        "nodes": [
          {
            "id": 31676,
            "nodeType": "FunctionDefinition",
            "src": "186:309:37",
            "nodes": [],
            "body": {
              "id": 31675,
              "nodeType": "Block",
              "src": "214:281:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31641,
                      "mutability": "mutable",
                      "name": "str",
                      "nameLocation": "238:3:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 31675,
                      "src": "224:17:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 31640,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "224:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31643,
                  "initialValue": {
                    "hexValue": "68656c6c6f20776f726c64",
                    "id": 31642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "244:13:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad",
                      "typeString": "literal_string \"hello world\""
                    },
                    "value": "hello world"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "224:33:37"
                },
                {
                  "assignments": [
                    31645
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31645,
                      "mutability": "mutable",
                      "name": "slice",
                      "nameLocation": "281:5:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 31675,
                      "src": "267:19:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 31644,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "267:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31652,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31648,
                        "name": "str",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31641,
                        "src": "309:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "314:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "35",
                        "id": 31650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "317:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 31646,
                        "name": "StringLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29037,
                        "src": "289:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StringLibrary_$29037_$",
                          "typeString": "type(library StringLibrary)"
                        }
                      },
                      "id": 31647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "303:5:37",
                      "memberName": "Slice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29036,
                      "src": "289:19:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,uint256,uint256) pure returns (string memory)"
                      }
                    },
                    "id": 31651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "289:30:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "267:52:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31656,
                        "name": "slice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31645,
                        "src": "348:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 31653,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28262,
                        "src": "329:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$28262_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 31655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "338:9:37",
                      "memberName": "logString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20244,
                      "src": "329:18:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 31657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "329:25:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31658,
                  "nodeType": "ExpressionStatement",
                  "src": "329:25:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 31672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 31663,
                                  "name": "slice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31645,
                                  "src": "415:5:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 31661,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "398:3:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 31662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "402:12:37",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "398:16:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 31664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "398:23:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 31660,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "388:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 31665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "388:34:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "68656c6c6f",
                                  "id": 31669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "469:7:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_1c8aff950685c2ed4bc3174f3472287b56d9517b9c948127319a09a7a36deac8",
                                    "typeString": "literal_string \"hello\""
                                  },
                                  "value": "hello"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_1c8aff950685c2ed4bc3174f3472287b56d9517b9c948127319a09a7a36deac8",
                                    "typeString": "literal_string \"hello\""
                                  }
                                ],
                                "expression": {
                                  "id": 31667,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "452:3:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 31668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "456:12:37",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "452:16:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 31670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "452:25:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 31666,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "442:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 31671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "442:36:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "388:90:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31659,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "364:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 31673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "364:124:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31674,
                  "nodeType": "ExpressionStatement",
                  "src": "364:124:37"
                }
              ]
            },
            "functionSelector": "e27c5b17",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSlice",
            "nameLocation": "195:9:37",
            "parameters": {
              "id": 31638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "204:2:37"
            },
            "returnParameters": {
              "id": 31639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "214:0:37"
            },
            "scope": 31677,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31636,
              "name": "Test",
              "nameLocations": [
                "175:4:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10782,
              "src": "175:4:37"
            },
            "id": 31637,
            "nodeType": "InheritanceSpecifier",
            "src": "175:4:37"
          }
        ],
        "canonicalName": "StringLibraryDemoTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31677,
          10782,
          1846,
          1843,
          10733,
          6532,
          6242,
          5563,
          3991,
          3297,
          1786
        ],
        "name": "StringLibraryDemoTest",
        "nameLocation": "150:21:37",
        "scope": 31753,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          1908,
          1913,
          1918,
          1925,
          1932,
          1939
        ]
      },
      {
        "id": 31752,
        "nodeType": "ContractDefinition",
        "src": "499:387:37",
        "nodes": [
          {
            "id": 31751,
            "nodeType": "FunctionDefinition",
            "src": "543:341:37",
            "nodes": [],
            "body": {
              "id": 31750,
              "nodeType": "Block",
              "src": "571:313:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31686,
                      "mutability": "mutable",
                      "name": "arr",
                      "nameLocation": "595:3:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 31750,
                      "src": "581:17:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31684,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "581:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31685,
                        "nodeType": "ArrayTypeName",
                        "src": "581:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31692,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 31690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "612:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 31689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "601:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31687,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "605:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31688,
                        "nodeType": "ArrayTypeName",
                        "src": "605:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 31691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "601:14:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "581:34:37"
                },
                {
                  "body": {
                    "id": 31709,
                    "nodeType": "Block",
                    "src": "655:35:37",
                    "statements": [
                      {
                        "expression": {
                          "id": 31707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 31703,
                              "name": "arr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31686,
                              "src": "669:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 31705,
                            "indexExpression": {
                              "id": 31704,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31694,
                              "src": "673:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "669:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 31706,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31694,
                            "src": "678:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "669:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31708,
                        "nodeType": "ExpressionStatement",
                        "src": "669:10:37"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31697,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31694,
                      "src": "642:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 31698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "646:2:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "642:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31710,
                  "initializationExpression": {
                    "assignments": [
                      31694
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 31694,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "635:1:37",
                        "nodeType": "VariableDeclaration",
                        "scope": 31710,
                        "src": "630:6:37",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 31693,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "630:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 31696,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 31695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "639:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "630:10:37"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 31701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "650:3:37",
                      "subExpression": {
                        "id": 31700,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31694,
                        "src": "650:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 31702,
                    "nodeType": "ExpressionStatement",
                    "src": "650:3:37"
                  },
                  "nodeType": "ForStatement",
                  "src": "625:65:37"
                },
                {
                  "assignments": [
                    31715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31715,
                      "mutability": "mutable",
                      "name": "slice",
                      "nameLocation": "713:5:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 31750,
                      "src": "699:19:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31713,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31714,
                        "nodeType": "ArrayTypeName",
                        "src": "699:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31722,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31718,
                        "name": "arr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31686,
                        "src": "740:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "745:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "35",
                        "id": 31720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "748:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 31716,
                        "name": "ArrayLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29087,
                        "src": "721:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ArrayLibrary_$29087_$",
                          "typeString": "type(library ArrayLibrary)"
                        }
                      },
                      "id": 31717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "734:5:37",
                      "memberName": "Slice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29086,
                      "src": "721:18:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"
                      }
                    },
                    "id": 31721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "721:29:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "699:51:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 31724,
                            "name": "slice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31715,
                            "src": "771:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 31725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "777:6:37",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "771:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 31726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "787:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "771:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31723,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "760:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 31728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "760:29:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31729,
                  "nodeType": "ExpressionStatement",
                  "src": "760:29:37"
                },
                {
                  "body": {
                    "id": 31748,
                    "nodeType": "Block",
                    "src": "828:50:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 31745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 31741,
                                  "name": "slice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31715,
                                  "src": "853:5:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 31743,
                                "indexExpression": {
                                  "id": 31742,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31731,
                                  "src": "859:1:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "853:8:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 31744,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31731,
                                "src": "865:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "853:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 31740,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              269,
                              290
                            ],
                            "referencedDeclaration": 269,
                            "src": "842:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 31746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "842:25:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31747,
                        "nodeType": "ExpressionStatement",
                        "src": "842:25:37"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31734,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31731,
                      "src": "816:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 31735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "820:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "816:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31749,
                  "initializationExpression": {
                    "assignments": [
                      31731
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 31731,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "809:1:37",
                        "nodeType": "VariableDeclaration",
                        "scope": 31749,
                        "src": "804:6:37",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 31730,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "804:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 31733,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 31732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "813:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "804:10:37"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 31738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "823:3:37",
                      "subExpression": {
                        "id": 31737,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31731,
                        "src": "823:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 31739,
                    "nodeType": "ExpressionStatement",
                    "src": "823:3:37"
                  },
                  "nodeType": "ForStatement",
                  "src": "799:79:37"
                }
              ]
            },
            "functionSelector": "e27c5b17",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSlice",
            "nameLocation": "552:9:37",
            "parameters": {
              "id": 31680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:37"
            },
            "returnParameters": {
              "id": 31681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:0:37"
            },
            "scope": 31752,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31678,
              "name": "Test",
              "nameLocations": [
                "532:4:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10782,
              "src": "532:4:37"
            },
            "id": 31679,
            "nodeType": "InheritanceSpecifier",
            "src": "532:4:37"
          }
        ],
        "canonicalName": "ArrayLibraryDemoTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31752,
          10782,
          1846,
          1843,
          10733,
          6532,
          6242,
          5563,
          3991,
          3297,
          1786
        ],
        "name": "ArrayLibraryDemoTest",
        "nameLocation": "508:20:37",
        "scope": 31753,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          1908,
          1913,
          1918,
          1925,
          1932,
          1939
        ]
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 37
}